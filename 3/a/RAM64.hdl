// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=reg0load, b=reg1load, c=reg2load, d=reg3load, e=reg4load, f=reg5load, g=reg6load, h=reg7load);
    RAM8(in=in, load=reg0load, address=address[0..2], out=ram0);
    RAM8(in=in, load=reg1load, address=address[0..2], out=ram1);
    RAM8(in=in, load=reg2load, address=address[0..2], out=ram2);
    RAM8(in=in, load=reg3load, address=address[0..2], out=ram3);
    RAM8(in=in, load=reg4load, address=address[0..2], out=ram4);
    RAM8(in=in, load=reg5load, address=address[0..2], out=ram5);
    RAM8(in=in, load=reg6load, address=address[0..2], out=ram6);
    RAM8(in=in, load=reg7load, address=address[0..2], out=ram7);
    Mux8Way16(a=ram0, b=ram1, c=ram2, d=ram3, e=ram4, f=ram5, g=ram6, h=ram7, sel=address[3..5], out=out);
}
